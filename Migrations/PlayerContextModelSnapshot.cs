// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyPlayerOne.Models;

#nullable disable

namespace ReadyPlayerOne.Migrations
{
    [DbContext(typeof(PlayerContext))]
    partial class PlayerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ReadyPlayerOne.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"), 1L, 1);

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Health")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Intelligence")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Luck")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stamina")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Stealth")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Strength")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            Alignment = "True Neutral",
                            Class = "Mage",
                            Health = 3,
                            Intelligence = 9,
                            Luck = 8,
                            PlayerName = "Esther Ulrick",
                            Stamina = 3,
                            Stealth = 6,
                            Strength = 2
                        },
                        new
                        {
                            PlayerId = 2,
                            Alignment = "Lawful Good",
                            Class = "Warrior",
                            Health = 8,
                            Intelligence = 2,
                            Luck = 2,
                            PlayerName = "Rhiordan Tannick",
                            Stamina = 8,
                            Stealth = 2,
                            Strength = 3
                        },
                        new
                        {
                            PlayerId = 3,
                            Alignment = "Chaotic Neutral",
                            Class = "Rogue",
                            Health = 6,
                            Intelligence = 7,
                            Luck = 7,
                            PlayerName = "Bevil Starling",
                            Stamina = 5,
                            Stealth = 9,
                            Strength = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
